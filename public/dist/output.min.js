Fraction=function(numerator,denominator){if("undefined"!=typeof numerator&&denominator)"number"==typeof numerator&&"number"==typeof denominator?(this.numerator=numerator,this.denominator=denominator):"string"==typeof numerator&&"string"==typeof denominator&&(this.numerator=parseInt(numerator),this.denominator=parseInt(denominator));else if("undefined"==typeof denominator)if(num=numerator,"number"==typeof num)this.numerator=num,this.denominator=1;else if("string"==typeof num){var a,b,arr=num.split(" ");if(arr[0]&&(a=arr[0]),arr[1]&&(b=arr[1]),a%1===0&&b&&b.match("/"))return new Fraction(a).add(new Fraction(b));if(!a||b)return void 0;if("string"==typeof a&&a.match("/")){var f=a.split("/");this.numerator=f[0],this.denominator=f[1]}else{if("string"==typeof a&&a.match("."))return new Fraction(parseFloat(a));this.numerator=parseInt(a),this.denominator=1}}this.normalize()},Fraction.prototype.clone=function(){return new Fraction(this.numerator,this.denominator)},Fraction.prototype.toString=function(){if("NaN"===this.denominator)return"NaN";var wholepart=this.numerator/this.denominator>0?Math.floor(this.numerator/this.denominator):Math.ceil(this.numerator/this.denominator),numerator=this.numerator%this.denominator,denominator=this.denominator,result=[];return 0!=wholepart&&result.push(wholepart),0!=numerator&&result.push((0===wholepart?numerator:Math.abs(numerator))+"/"+denominator),result.length>0?result.join(" "):0},Fraction.prototype.rescale=function(factor){return this.numerator*=factor,this.denominator*=factor,this},Fraction.prototype.add=function(b){var a=this.clone();return b=b instanceof Fraction?b.clone():new Fraction(b),td=a.denominator,a.rescale(b.denominator),b.rescale(td),a.numerator+=b.numerator,a.normalize()},Fraction.prototype.subtract=function(b){var a=this.clone();return b=b instanceof Fraction?b.clone():new Fraction(b),td=a.denominator,a.rescale(b.denominator),b.rescale(td),a.numerator-=b.numerator,a.normalize()},Fraction.prototype.multiply=function(b){var a=this.clone();if(b instanceof Fraction)a.numerator*=b.numerator,a.denominator*=b.denominator;else{if("number"!=typeof b)return a.multiply(new Fraction(b));a.numerator*=b}return a.normalize()},Fraction.prototype.divide=function(b){var a=this.clone();if(b instanceof Fraction)a.numerator*=b.denominator,a.denominator*=b.numerator;else{if("number"!=typeof b)return a.divide(new Fraction(b));a.denominator*=b}return a.normalize()},Fraction.prototype.equals=function(b){b instanceof Fraction||(b=new Fraction(b));var a=this.clone().normalize(),b=b.clone().normalize();return a.numerator===b.numerator&&a.denominator===b.denominator},Fraction.prototype.normalize=function(){var isFloat=function(n){return"number"==typeof n&&(n>0&&n%1>0&&1>n%1||0>n&&0>n%-1&&n%-1>-1)},roundToPlaces=function(n,places){if(places){var scalar=Math.pow(10,places);return Math.round(n*scalar)/scalar}return Math.round(n)};return function(){if(isFloat(this.denominator)){var rounded=roundToPlaces(this.denominator,9),scaleup=Math.pow(10,rounded.toString().split(".")[1].length);this.denominator=Math.round(this.denominator*scaleup),this.numerator*=scaleup}if(isFloat(this.numerator)){var rounded=roundToPlaces(this.numerator,9),scaleup=Math.pow(10,rounded.toString().split(".")[1].length);this.numerator=Math.round(this.numerator*scaleup),this.denominator*=scaleup}var gcf=Fraction.gcf(this.numerator,this.denominator);return this.numerator/=gcf,this.denominator/=gcf,(this.numerator<0&&this.denominator<0||this.numerator>0&&this.denominator<0)&&(this.numerator*=-1,this.denominator*=-1),this}}(),Fraction.gcf=function(a,b){var common_factors=[],fa=Fraction.primeFactors(a),fb=Fraction.primeFactors(b);if(fa.forEach(function(factor){var i=fb.indexOf(factor);i>=0&&(common_factors.push(factor),fb.splice(i,1))}),0===common_factors.length)return 1;var gcf=function(){var i,r=common_factors[0];for(i=1;i<common_factors.length;i++)r*=common_factors[i];return r}();return gcf},Fraction.primeFactors=function(n){for(var num=Math.abs(n),factors=[],_factor=2;num>=_factor*_factor;)num%_factor===0?(factors.push(_factor),num/=_factor):_factor++;return 1!=num&&factors.push(num),factors};var NumberModel=Backbone.Model.extend({initialize:function(params){this.set("value",params.value),this.set("display",params.display)},dequeue:function(){this.trigger("dequeue",this)},getValue:function(){return this.get("value")},getText:function(){return this.get("display")}}),OperationModel=Backbone.Model.extend({initialize:function(){this.set("value","+")},getValue:function(){return this.get("value")},nextValue:function(){var operation=this.get("value");"+"===operation?this.set("value","-"):"-"===operation?this.set("value","*"):"*"===operation?this.set("value","/"):this.set("value","+"),this.trigger("newValue")}}),AppModel=Backbone.Model.extend({initialize:function(){this.resetApp(),this.get("numQueue").on("dequeue",function(number){this.get("numComputingValues")<2&&(this.get("numQueue").remove(number),this.get("computeQueue").reset(0===this.get("numComputingValues")?[number,new NumberModel({})]:[this.get("computeQueue").at(0),number]),this.set("numComputingValues",this.get("numComputingValues")+1))},this),this.get("computeQueue").on("dequeue",function(number){this.get("computeQueue").remove(number),this.get("computeQueue").add(new NumberModel({})),this.get("numQueue").add(number),this.set("numComputingValues",this.get("numComputingValues")-1)},this),this.get("numQueue").on("win",function(){alert("You won! Your time was "+this.get("timer")+" seconds"),clearInterval(myVar),$.ajax({url:"http://localhost:4568/recordTime",type:"POST",data:{time:this.get("timer")}}).done(function(){var view=new AppView({model:new AppModel});$(".board").html(""),view.$el.appendTo($(".board"))})},this),this.get("operation").on("newValue",function(){this.trigger("update")},this);var that=this,myVar=setInterval(function(){that.set("timer",myTimer())},1e3),myTimer=function(){var d=new Date,diff=(d-that.get("startDate"))/1e3;return diff%1>.5&&(diff-=.5),document.getElementById("timer").innerHTML="Timer: "+Math.floor(diff),Math.floor(diff)}},resetApp:function(){this.set("startingNums",[]),this.set("hint","");for(var numArray=this.generateValidNums(),i=0;i<numArray.length;i++)this.get("startingNums").push(new NumberModel({value:numArray[i],display:""+numArray[i]}));this.set("numQueue",new NumberQueue(this.get("startingNums"))),this.set("computeQueue",new ComputeQueue([new NumberModel({}),new NumberModel({})])),this.set("operation",new OperationModel),this.set("numComputingValues",0),this.set("timer",0),this.set("startDate",new Date);var that=this;$.ajax({url:"http://localhost:4568/averageTime",type:"GET"}).done(function(average){that.set("averageTime",average),that.trigger("update")})},compute:function(){if(this.get("computeQueue").at(1).getValue()){var one=this.get("computeQueue").at(0).getValue(),two=this.get("computeQueue").at(1).getValue(),operation=this.get("operation").getValue(),calculate=this.calculateValue(one,two,operation);this.get("computeQueue").reset([new NumberModel({}),new NumberModel({})]),this.get("numQueue").add({value:calculate[0],display:calculate[1]}),this.set("numComputingValues",0)}else alert("Need two numbers to do a computation!")},calculateValue:function(one,two,operation){var text,result;if(result="+"===operation?one+two:"-"===operation?one-two:"*"===operation?one*two:one/two,result%1!==0){var f=new Fraction(result);text=f.numerator+"/"+f.denominator}else text=""+result;return[result,text]},clearComputeArea:function(){this.get("computeQueue").each(function(number){number.get("value")&&this.get("numQueue").add(number)},this),this.get("computeQueue").reset([new NumberModel({}),new NumberModel({})]),this.set("numComputingValues",0)},reset:function(){this.get("numQueue").reset(this.get("startingNums")),this.get("computeQueue").reset([new NumberModel({}),new NumberModel({})]),this.set("numComputingValues",0)},generateValidNums:function(){for(var numArray=[],i=0;4>i;i++)numArray.push(Math.floor(13*Math.random()+1));for(;!this.isValid(numArray);){numArray=[];for(var i=0;4>i;i++)numArray.push(Math.floor(13*Math.random()+1))}return numArray},isValid:function(numArray){var possible=!1,operators={"+":function(a,b){return a+b},"-":function(a,b){return a-b},"*":function(a,b){return a*b},"/":function(a,b){return a/b}},opString=function(num){return 0===num?"+":1===num?"-":2===num?"*":"/"},that=this,recurse=function(currentNums,remainingNums){if(0===remainingNums.length)for(var firstOp,secondOp,thirdOp,i=0;4>i;i++){firstOp=opString(i);for(var j=0;4>j;j++){secondOp=opString(j);for(var k=0;4>k;k++){if(thirdOp=opString(k),24===operators[thirdOp](operators[secondOp](operators[firstOp](currentNums[0],currentNums[1]),currentNums[2]),currentNums[3]))return that.set("hint","? "+thirdOp+" "+currentNums[3]+" = 24"),void(possible=!0);if(24===operators[thirdOp](operators[firstOp](currentNums[0],operators[secondOp](currentNums[1],currentNums[2])),currentNums[3]))return that.set("hint","? "+thirdOp+" "+currentNums[3]+" = 24"),void(possible=!0);if(24===operators[secondOp](operators[firstOp](currentNums[0],currentNums[1]),operators[thirdOp](currentNums[2],currentNums[3])))return that.set("hint",""+operators[firstOp](currentNums[0],currentNums[1])+" "+secondOp+" ? = 24"),void(possible=!0);if(24===operators[firstOp](currentNums[0],operators[thirdOp](operators[secondOp](currentNums[1],currentNums[2]),currentNums[3])))return that.set("hint",currentNums[0]+" "+firstOp+" ? = 24"),void(possible=!0);if(24===operators[firstOp](currentNums[0],operators[secondOp](currentNums[1],operators[thirdOp](currentNums[2],currentNums[3]))))return that.set("hint",currentNums[0]+" "+firstOp+" ? = 24"),void(possible=!0)}}}else for(var i=0;i<remainingNums.length;i++){var tempRemaining=remainingNums.slice(0),tempCurrent=currentNums.slice(0);tempRemaining.splice(i,1),tempCurrent.push(remainingNums[i]),recurse(tempCurrent,tempRemaining)}};return recurse([],numArray),possible}}),Numbers=Backbone.Collection.extend({initialize:function(){},model:NumberModel}),NumberQueue=Numbers.extend({initialize:function(){this.on("add",function(number){1===this.length&&24===number.getValue()&&this.trigger("win")},this)}}),ComputeQueue=Numbers.extend({initialize:function(){this.on("dequeue",function(number){this.length>1&&this.remove(number)})}}),NumberView=Backbone.View.extend({className:"number",template:_.template("<span><%= display %></span>"),initialize:function(){this.model.on("change",function(){this.render()},this),this.render()},events:{click:function(){this.model.dequeue()}},render:function(){return this.$el.html(this.template(this.model.attributes))}}),OperationView=Backbone.View.extend({className:"operation",template:_.template("<span><%= value %></span>"),initialize:function(){this.model.on("change",function(){this.render()},this),this.render()},events:{click:function(){this.model.nextValue()}},render:function(){return this.$el.html(this.template(this.model.attributes))}}),NumberQueueView=Backbone.View.extend({className:"queue",initialize:function(){this.collection.on("add",function(){this.render()},this),this.collection.on("remove",function(){this.render()},this),this.collection.on("reset",function(){this.render()},this),this.render()},render:function(){this.$el.children().detach(),this.$el.html("<h3>Number Queue</h3>").append(this.collection.map(function(number){return new NumberView({model:number}).render()}))}}),ComputeView=Backbone.View.extend({className:"queue",initialize:function(){this.collection.on("add",function(){this.render()},this),this.collection.on("remove",function(){this.render()},this),this.collection.on("reset",function(){this.render()},this),this.render()},render:function(){this.$el.children().detach(),this.$el.html("<h3>Computation Area</h3>").append(this.collection.map(function(number){return new NumberView({model:number}).render()}))}}),AppView=Backbone.View.extend({template:_.template('<button class="reset-button">Reset</button> <button class="hint-button">Hint</button>    <a href="/logout" class="logout">Logout</a>    <div class="average-time">Average Time: </div>    <div class="number-queue"></div>    <h3>Computation Area</h3>    <div class="computeOne-area"></div>    <div class="operation-box"></div>    <div class="computeTwo-area"></div>    <div class="equals">=</div>    <div class="answer-area"></div>    <button class="submit-button">Submit</button> <button class="clear-button">Clear</button><div id="timer">Timer: </div>    <div class="hint-area"></div>'),events:{"click .reset-button":function(){this.model.reset()},"click .hint-button":function(){this.$(".hint-area").html("Hint: "+this.model.get("hint"))},"click .submit-button":function(){this.model.compute()},"click .clear-button":function(){this.model.clearComputeArea()}},initialize:function(){this.holderView=new NumberQueueView({collection:this.model.get("numQueue")}),this.oneComputeView=new NumberView({model:this.model.get("computeQueue").at(0)}),this.twoComputeView=new NumberView({model:this.model.get("computeQueue").at(1)}),this.operationView=new OperationView({model:this.model.get("operation")}),this.model.on("change:numComputingValues",function(){this.oneComputeView=new NumberView({model:this.model.get("computeQueue").at(0)}),this.twoComputeView=new NumberView({model:this.model.get("computeQueue").at(1)}),this.render()},this),this.model.on("update",function(){this.render()},this),this.render()},render:function(){if(this.$el.children().detach(),this.$el.html(this.template),this.$(".number-queue").html(this.holderView.el),this.$(".computeOne-area").html(this.oneComputeView.render()),this.$(".operation-box").html(this.operationView.el),this.$(".computeTwo-area").html(this.twoComputeView.render()),this.$("#timer").html("Timer: "+this.model.get("timer")),this.model.get("computeQueue").at(1).getValue()){var one=this.model.get("computeQueue").at(0).getValue(),two=this.model.get("computeQueue").at(1).getValue(),op=this.model.get("operation").getValue(),calc=this.model.calculateValue(one,two,op);this.$(".answer-area").text(calc[1])}else this.$(".answer-area").text("");void 0!==this.model.get("averageTime")&&""!==this.model.get("averageTime")&&this.$(".average-time").text("Average Time: "+this.model.get("averageTime"))}}),view=new AppView({model:new AppModel});view.$el.appendTo($("div.board"));